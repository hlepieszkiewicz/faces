{"version":3,"sources":["scripts/editor.js"],"names":["window","addEventListener","console","clear","RED","ORANGE","BLUE","WHITE","canvasEl","document","querySelector","colorButtons","querySelectorAll","actionButtons","audio","svgElements","positionInfo","getBoundingClientRect","height","width","faceParts","currentNode","handleColorButton","color","target","dataset","changeBackgroundColor","changeTranformerBorderColor","changeTextColor","handleActionButton","button","action","transformer","detach","remove","layer","draw","stage","removeChildren","setup","alert","rect","fill","borderStroke","text","getImageByID","id","makeFaceNode","element","faceElement","Konva","Image","x","Math","random","y","image","draggable","zIndex","selected","node","nodes","on","add","Stage","container","Layer","Rect","Transformer","keepRatio","enabledAnchors","padding","borderDash","Text","fontFamily","fontSize","init","forEach","btn","el","contnetFaceParts","part","push","img","play"],"mappings":"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","file":"editor.488279c3.js","sourceRoot":"..\\src","sourcesContent":["window.addEventListener('load', () => {\r\n  console.clear();\r\n\r\n\r\n  // CONSTANS\r\n  const RED = 'rgb(156, 52, 32)'\r\n  const ORANGE = ' rgb(239,127,26)'\r\n  const BLUE = 'rgb(10, 71, 102)'\r\n  const WHITE = 'rgb(255,255,255)'\r\n\r\n  //HTML ELEMENTS\r\n  const canvasEl = document.querySelector('#container');\r\n  const colorButtons = document.querySelectorAll('.toolbar__color');\r\n  const actionButtons = document.querySelectorAll('.toolbar__button')\r\n  const audio = document.querySelector('audio');\r\n  const svgElements = document.querySelectorAll(\".svg-face\");\r\n\r\n\r\n  const positionInfo = canvasEl.getBoundingClientRect();\r\n  const height = positionInfo.height;\r\n  const width = positionInfo.width;\r\n\r\n\r\n  const faceParts = []\r\n  let currentNode = null;\r\n\r\n\r\n\r\n  const handleColorButton = ({\r\n    target: {\r\n      dataset: {\r\n        color\r\n      }\r\n    }\r\n  }) => {\r\n    switch (color) {\r\n      case 'red':\r\n        changeBackgroundColor(RED);\r\n        changeTranformerBorderColor(WHITE);\r\n        changeTextColor(WHITE)\r\n        break;\r\n      case 'orange':\r\n        changeBackgroundColor(ORANGE);\r\n        changeTranformerBorderColor(BLUE)\r\n        changeTextColor(WHITE)\r\n        break;\r\n      case 'blue':\r\n        changeBackgroundColor(BLUE);\r\n        changeTranformerBorderColor(WHITE)\r\n        changeTextColor(WHITE)\r\n\r\n        break;\r\n      case 'white':\r\n        changeBackgroundColor(WHITE);\r\n        changeTranformerBorderColor(BLUE);\r\n        changeTextColor(BLUE)\r\n\r\n        break;\r\n    }\r\n  }\r\n\r\n  const handleActionButton = ({\r\n    target: {\r\n      dataset: {\r\n        action: button\r\n      }\r\n    }\r\n  }) => {\r\n\r\n    switch (button) {\r\n      case 'eraser':\r\n        if (currentNode) {\r\n          transformer.detach();\r\n          currentNode.remove();\r\n          layer.draw();\r\n        }\r\n        break;\r\n\r\n      case 'trash':\r\n        stage.clear()\r\n        transformer.detach();\r\n        layer.removeChildren()\r\n        changeBackgroundColor(WHITE);\r\n        changeTranformerBorderColor(BLUE);\r\n        changeTextColor(BLUE)\r\n        setup();\r\n        break;\r\n\r\n      case 'download':\r\n        transformer.detach();\r\n        layer.draw();\r\n        alert(`Aby zapisaÄ‡ ðŸ“¥\r\n        1) kliknij prawym przyciskiem myszy na obrazie\r\n        2) wybierz opcjÄ™ \"zapisz jako\".`)\r\n        break;\r\n\r\n    }\r\n  }\r\n\r\n  const changeBackgroundColor = (color) => {\r\n    rect.fill(color);\r\n    layer.draw();\r\n  }\r\n\r\n  const changeTranformerBorderColor = (color) => {\r\n    transformer.borderStroke(color);\r\n    layer.draw();\r\n  }\r\n\r\n  const changeTextColor = (color) => {\r\n    text.fill(color);\r\n    layer.draw();\r\n  }\r\n\r\n  const getImageByID = ({\r\n    id\r\n  }) => {\r\n    return document.querySelector(`img.preload#${id}`)\r\n  }\r\n\r\n\r\n  const makeFaceNode = element => {\r\n\r\n\r\n    const faceElement = new Konva.Image({\r\n      x: Math.random() * stage.width() / 3,\r\n      y: Math.random() * stage.height() / 3,\r\n      image: element,\r\n      draggable: true,\r\n      zIndex: 1\r\n    });\r\n\r\n\r\n\r\n\r\n    const selected = (node) => {\r\n      transformer.nodes([node])\r\n      node.zIndex(20)\r\n      transformer.zIndex(20)\r\n      text.zIndex(20)\r\n      currentNode = node;\r\n    }\r\n\r\n\r\n\r\n    faceElement.on('mousedown', () => {\r\n      selected(faceElement)\r\n    })\r\n    faceElement.on('touchstart', () => {\r\n      selected(faceElement)\r\n    })\r\n\r\n\r\n    return faceElement\r\n\r\n  }\r\n\r\n  const setup = () => {\r\n    layer.add(rect)\r\n    layer.add(transformer)\r\n    layer.add(text);\r\n  }\r\n\r\n\r\n\r\n\r\n  const stage = new Konva.Stage({\r\n    container: 'container',\r\n    // -10px for the border\r\n    width: width - 10,\r\n    height: height - 10\r\n  });\r\n\r\n\r\n  let layer = new Konva.Layer();\r\n\r\n\r\n  const rect = new Konva.Rect({\r\n    x: 0,\r\n    y: 0,\r\n    width: stage.width(),\r\n    height: stage.height(),\r\n    fill: WHITE\r\n  })\r\n\r\n  const transformer = new Konva.Transformer({\r\n    keepRatio: true,\r\n    enabledAnchors: [\r\n      'top-left',\r\n      'top-right',\r\n      'bottom-left',\r\n      'bottom-right'\r\n    ],\r\n    padding: 2,\r\n    borderDash: [5, 10]\r\n  })\r\n\r\n  const text = new Konva.Text({\r\n    x: 10,\r\n    y: 10,\r\n    fontFamily: 'Calibri',\r\n    fontSize: 24,\r\n    text: '',\r\n    fill: 'black'\r\n  });\r\n\r\n  const init = () => {\r\n\r\n    colorButtons.forEach(btn => {\r\n      btn.addEventListener('click', handleColorButton)\r\n    });\r\n\r\n    actionButtons.forEach(btn => {\r\n      btn.addEventListener('click', handleActionButton)\r\n    })\r\n\r\n    svgElements.forEach(el => {\r\n      const contnetFaceParts = el.querySelectorAll(\".face-part\");\r\n      contnetFaceParts.forEach(part => faceParts.push(part))\r\n    })\r\n\r\n\r\n    faceParts.forEach(part => {\r\n      part.addEventListener('click', () => {\r\n        const img = getImageByID(part);\r\n        const node = makeFaceNode(img);\r\n        layer.add(node);\r\n        layer.draw();\r\n        audio.play();\r\n      })\r\n    })\r\n\r\n    stage.add(layer);\r\n    setup();\r\n\r\n    layer.draw()\r\n\r\n  }\r\n  init();\r\n});"]}